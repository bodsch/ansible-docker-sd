---

- name: include OS specific configuration. ({{ ansible_distribution }} ({{ ansible_os_family }}) {{ ansible_distribution_major_version }})
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      paths:
        - "vars"
      files:
        # eg. debian-10 / ubuntu-20.04 / centos-8 / oraclelinux-8
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
        # eg. archlinux-systemd / archlinux-openrc
        - "{{ ansible_distribution | lower }}-{{ ansible_service_mgr | lower }}.yml"
        # eg. debian / ubuntu / centos / oraclelinux
        - "{{ ansible_distribution | lower }}.yml"
        # eg. redhat / debian / archlinux
        - "{{ ansible_os_family | lower }}.yml"
        - default.yaml
      skip: true

- name: update package cache
  ansible.builtin.package:
    update_cache: true

- name: define delegate instance for download handling
  ansible.builtin.set_fact:
    docker_sd_delegate_to: "{{ ansible_host }}"
    docker_sd_local_tmp_directory: "{{
        lookup('env', 'CUSTOM_LOCAL_TMP_DIRECTORY') |
        default('/var/cache/ansible/docker-sd', true) }}/{{ docker_sd_version }}"
  when:
    - docker_sd_direct_download

- name: install dependency
  ansible.builtin.package:
    name: "{{ docker_sd_requirements }}"
    state: present
  when:
    - docker_sd_requirements | default([]) | count > 0

- name: find latest release
  delegate_to: localhost
  become: false
  run_once: true
  when:
    - docker_sd_version == "latest"
  block:
    - name: get latest release
      ansible.builtin.uri:
        url: "https://api.github.com/repos/prometheus/docker-sd/releases/latest"
        method: GET
        return_content: true
        status_code: 200
        body_format: json
        validate_certs: false
        user: "{{ lookup('env', 'GH_USER') | default(omit) }}"
        password: "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"
      # no_log: "{{ not lookup('env', 'ANSIBLE_DEBUG') | bool }}"
      register: _latest_release
      until: _latest_release.status == 200
      retries: 5

    - name: set docker-sd version
      ansible.builtin.set_fact:
        docker_sd_version: "{{ _latest_release.json.tag_name[1:] }}"

- name: detect our installation path. {{ docker_sd_install_path | dirname }}
  ansible.builtin.stat:
    path: "{{ docker_sd_install_path | dirname }}"
    get_checksum: false
  register: stat_docker_sd_path
  ignore_errors: true

- name: detect installed docker-sd binary
  ansible.builtin.stat:
    path: "{{ docker_sd_install_path }}/docker-sd"
  register: stat_docker_sd_binary

- name: create download directory
  become: false
  delegate_to: "{{ docker_sd_delegate_to }}"
  run_once: "{{ 'false' if docker_sd_direct_download else 'true' }}"
  ansible.builtin.file:
    path: "{{ docker_sd_local_tmp_directory }}"
    state: directory
    mode: 0750

- name: user and group handling
  when:
    - docker_sd_system_user != "root" or docker_sd_system_group != "root"
  block:
    - name: create docker-sd group
      ansible.builtin.group:
        name: "{{ docker_sd_system_group }}"
        state: present
        system: true
      when:
        - docker_sd_system_group != "root"

    - name: create docker-sd user
      ansible.builtin.user:
        name: "{{ docker_sd_system_user }}"
        groups: "{{ docker_sd_system_group }}"
        append: true
        shell: /usr/sbin/nologin
        system: true
        createhome: false
        home: /nonexistent
      when:
        - docker_sd_system_user != "root"

- name: create install directory
  ansible.builtin.file:
    path: "{{ docker_sd_install_path }}"
    state: directory
    owner: "{{ docker_sd_system_user }}"
    group: "{{ docker_sd_system_group }}"
    mode: 0755

- name: fix directory rights for {{ docker_sd_install_path | dirname }}
  ansible.builtin.file:
    path: "{{ docker_sd_install_path | dirname }}"
    state: directory
    owner: "{{ docker_sd_system_user }}"
    group: "{{ docker_sd_system_group }}"
    mode: 0755
    recurse: true

- name: create ansible local facts directory
  ansible.builtin.file:
    dest: /etc/ansible/facts.d
    state: directory
    owner: root
    group: root
    mode: 0775

- name: merge docker-sd configuration between defaults and custom
  ansible.builtin.set_fact:
    docker_sd_rest_api: "{{ docker_sd_defaults_rest_api | combine(docker_sd_rest_api, recursive=True) }}"
    docker_sd_hosts: "{{ docker_sd_defaults_hosts | union(docker_sd_hosts) }}"
    docker_sd_addition_labels: "{{ docker_sd_defaults_addition_labels | union(docker_sd_addition_labels) }}"

...
